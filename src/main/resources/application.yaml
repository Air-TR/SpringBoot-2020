server:
  port: 8081
  servlet:
    context-path: /2020

jasypt:
  encryptor:
    password: SecretKey # jasypt 密钥；为防止密钥泄露，可以在项目部署时用命令传入秘钥值：java -jar -Djasypt.encryptor.password=SecretKey xxx.jar（还可以在服务器环境变量里配置，进一步提高安全性）
    algorithm: PBEWithMD5AndDES # 默认加密方式 PBEWithMD5AndDES，可以更改为 PBEWithMD5AndTripleDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator # jasypt 在 3.0.0 以后更改了加密算法，需要增加此配置，否则启动会报错（使用低于 3.0.0 版本可不配置此项）

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 以下配置明文见 -> JasyptCreate.java
    # 本地配置
    url: ENC(HlFACI4CbfMzdKyf62F+G/9SCi5EsfneQnLjMRaRSeduPSh1dWa9QxtT7XmzZdXA3fioAQ5pU1FIQf4B9FPYISFn2xOeCWLmDkdUcE4jYgPWpoy6MCLam7Iw97xX77ZxkiTHQV2SE9M=)
    username: ENC(6YrBrC3DIPDhLs6pDblobg==) # 使用 jasypt 加密
    password: ENC(ZtkRoI6NnmHAhN8USO1DDA==) # 使用 jasypt 加密
    # HuiBo 配置
#    url: jdbc:mysql://127.0.0.1:3307/springboot-2020?useUnicode=true&characterEncoding=utf-8&useSSL=true
#    username: root
#    password: 123456

#  devtools:
#    restart:
#      enabled: true # 配置项目热部署（SpringBoot不配置也生效，只需要pom文件中的热部署配置）

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

  redis:
    database: 1 # Redis 数据库索引（默认为 0），如果设置为 1，那么存入的 key-value 都存放在 select 1 中
    host: 127.0.0.1
    port: 6379
    max-wait: 30000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
    max-active: 100 # 连接池最大连接数（使用负值表示没有限制）
    max-idle: 20    # 连接池中的最大空闲连接
    min-idle: 0     # 连接池中的最小空闲连接
    timeout: 5000   # 连接超时
#    password:       # 密码，默认密码为空
#    cluster:        # 集群配置
#    nodes: 127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384,127.0.0.1:6385,127.0.0.1:6386
#    max-redirects: 2 # 最大重定向次数

  #rabbitmq
#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest

mybatis:
  mapper-locations: classpath:mapper/*.xml

local:
  develop: true

shiro:
  filterEnable: false         # 是否开启 shiro 拦截验证过滤
  hashAlgorithmName: SHA-256  # 加密算法（SHA-256、MD5...）
  hashIterations: 1           # 加密 Hash 次数
  salt: SALT                  # 加密盐值

thread:
  pool:
    core-pool-size: 3  # 核心线程数
    max-pool-size: 5  # 最大线程数
    queue-capacity: 10  # 工作队列容量（若采取直接拒绝策略，最多处理 max-pool-size + queue-capacity 个线程任务，多余任务直接拒绝）
    keep-alive-seconds: 10  # 线程池维护线程所允许的空闲时间（秒），超过这个时间会关闭多余的空闲线程，线程池保留 core-pool-size 个线程数
    rejected-execution-handler: CallerRunsPolicy  # 拒绝策略
    waitForJobsToCompleteOnShutdown: true  # 线程池关闭的时候，是否等待所有任务都完成后，再销毁其他的 Bean，这样这些异步任务的销毁，就会先于数据库连接池对象的销毁
